apiVersion: v1
kind: ConfigMap
metadata:
  name: reverse-proxy-config-hpa
  namespace: marek-apps
data:
  nginx.conf: |
   
    log_format custom_format '$remote_addr - $remote_user [$time_local] ' '"$request" $status $body_bytes_sent ' '"$http_referer" "$http_user_agent" ' '$upstream_response_time';
    
    upstream backend {
        zone http_backend 64k;
        
        server nginx-srv-hpa;
    }
    
    server {
        listen       80 default_server;
        server_name  localhost;
        
        status_zone server_backend;

        access_log /var/log/nginx/host.access.log custom_format;

        location / {
            # root   /usr/share/nginx/html;
            # index  index.html index.htm;
            
            proxy_pass http://backend;
              
            add_header Cache-Control "max-age=0, no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}

        # enable /api/ location with appropriate access control in order
        # to make use of NGINX Plus API
        #
        location /api/ {
            api write=on;
            allow 127.0.0.1;
            
            # deny all;
        }

        # enable NGINX Plus Dashboard; requires /api/ location to be
        # enabled and appropriate access control for remote access
        #
        location = /dashboard.html {
            root /usr/share/nginx/html;
        }
    }
